apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
// Required as JUnit 5 doesn't support android modules out of the box.
apply plugin: "de.mannodermaus.android-junit5"
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "p.com.githubapp"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // Add Kotlin source directory to all source sets
    sourceSets.each {
        it.java.srcDirs += "src/$it.name/kotlin"
    }

    testOptions {
        junitPlatform {
            filters {
                engines {
                    include 'spek2'
                }
            }
        }
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    //material
    implementation 'com.google.android.material:material:1.1.0'
    //pagination
    implementation "androidx.paging:paging-runtime-ktx:$rootProject.ext.paging_version"
    //livedata
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    implementation "androidx.fragment:fragment-ktx:1.2.5"

    //okhttp
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.ext.okhttp_version"

    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.ext.retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.ext.retrofit_version"
    implementation 'com.google.code.gson:gson:2.8.6'
    //rxjava
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.ext.rx_android_version"
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.ext.rx_java2"
    //glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    //kotlin
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    //dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    //mockito
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$rootProject.ext.mockito_kotlin_version"
    testImplementation "org.mockito:mockito-inline:$rootProject.ext.mockito_version"

    // spek
    testImplementation "org.spekframework.spek2:spek-dsl-jvm:$rootProject.ext.spek_version"
    testImplementation "org.spekframework.spek2:spek-runner-junit5:$rootProject.ext.spek_version"
    // spek requires kotlin-reflect, omit when already in classpath
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$rootProject.ext.kotlin_version"
    //mock web server
    testImplementation("com.squareup.okhttp3:mockwebserver:4.8.0")
    
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

}